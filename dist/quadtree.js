var Quadtree;(()=>{"use strict";var t={};(()=>{var e=t;Object.defineProperty(e,"__esModule",{value:!0}),e.Quadtree=void 0;var s=function(){function t(t,e,s,i){void 0===e&&(e=10),void 0===s&&(s=4),void 0===i&&(i=0),this.bounds=t,this.maxObjects=e,this.maxLevels=s,this.level=i,this.objects=[],this.nodes=[],this.width2=this.bounds.width/2,this.height2=this.bounds.height/2,this.xmid=this.bounds.x+this.width2,this.ymid=this.bounds.y+this.height2}return t.prototype.insert=function(t){var e=this;if(t){var s,i=0;if(this.nodes.length&&(s=this.getIndex(t)).length)s.forEach((function(s){e.nodes[s].insert(t)}));else if(this.objects.push(t),this.objects.length>this.maxObjects&&this.level<this.maxLevels){this.nodes.length||this.split();for(var h=function(){if((s=n.getIndex(n.objects[i])).length){var t=n.objects.splice(i,1)[0];s.forEach((function(s){e.nodes[s].insert(t)}))}else i+=1},n=this;i<this.objects.length;)h()}}},t.prototype.retrieve=function(t){var e=this;if(!t)return[];var s=this.getIndex(t),i=this.objects;if(this.nodes.length)if(s.length)s.forEach((function(s){i=i.concat(e.nodes[s].retrieve(t))}));else for(var h=0;h<this.nodes.length;h++)i=i.concat(this.nodes[h].retrieve(t));return i.filter((function(t,e,s){return s.indexOf(t)===e}))},t.prototype.clear=function(){this.objects=[];for(var t=0;t<this.nodes.length;t++)this.nodes[t]&&this.nodes[t].clear();this.nodes=[]},t.prototype.getIndex=function(t){if(!t)return[];var e=[],s=this.xmid,i=this.ymid,h=t.y<=i,n=t.y>i;if(t.x<=s)if(h){e.push(1);var o=!1;t.x+t.width>s&&(e.push(0),o=!0),t.y+t.height>i&&(e.push(2),o&&e.push(3))}else n&&(e.push(2),t.x+t.width>s&&e.push(3));else t.x>s&&(h?(e.push(0),t.y+t.height>i&&e.push(3)):e.push(3));return e},t.prototype.split=function(){var e=this,s=Math.round(this.width2),i=Math.round(this.height2),h=Math.round(this.bounds.x),n=Math.round(this.bounds.y),o=function(h,n){return new t({x:h,y:n,width:s,height:i},e.maxObjects,e.maxLevels,e.level+1)};this.nodes=[o(h+s,n),o(h,n),o(h,n+i),o(h+s,n+i)]},t}();e.Quadtree=s})(),Quadtree=t})();